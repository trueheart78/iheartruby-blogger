#!/usr/bin/env ruby
# frozen_string_literal: true

class Setup
  def initialize
    @content = []
  end

  def analyze
    insert_separator
    add_content separator
    add_env_output unless env_exists?
    add_bin_output unless bin_exists?
    add_nice_content if env_exists? && bin_exists?
    insert_separator
    self
  end

  def content
    @content.join "\n"
  end

  def blog_path_options
    @blog_dir_paths ||= blog_dir_options.map { |dir| find_path dir }.flatten
  end

  def find_path(dir)
    path = `find #{File.expand_path('~')} -type d -name '#{dir}'`
    return [] if path.empty?
    path.split "\n"
  end

  def blog_dir_options
    [
      'trueheart78.github.io',
      'my-github-page',
      'personal-blog',
      'my-personal-page'
    ]
  end

  def bin_exists?
    `which iheartruby`.start_with? full_bin_path
  end

  private

  def insert_separator
    add_content separator
  end

  def add_content(output)
    output = [output] unless output.instance_of? Array
    @content.concat output.concat([''])
  end

  def add_env_output
    add_content ['Run the following command to create the .env file:',
                 '',
                 'cp .env.default .env',
                 '',
                 'Update the .env file with the full blog path.']
  end

  # unless env_exists?
  #   if blog_path_options.size.positive?
  #     if blog_path_options.size == 1
  #       content << 'Setup the .env config:'
  #       content << ''
  #       content << "echo 'BLOG_PATH: #{blog_path_options.first}' >> .env"
  #     else
  #       content << 'Multiple paths detected - use the command that matches'
  #       blog_path_options.each do |blog_path_option|
  #         content << "echo 'BLOG_PATH: #{blog_path_option}' >> .env"
  #       end
  #     end
  #   else
  #     content << 'Unable to detect the path to the blog'
  #     content << 'Please copy the .env.default file to .env'
  #     content << 'and update the BLOG_PATH with it\'s full path'
  #   end
  #   content << ''
  # end

  def add_bin_output
    add_content ['Add the following to your shell profile of choice:',
                 '',
                 "export PATH=\"$PATH:#{full_bin_path}\""]
  end

  def add_nice_content
    add_content 'Everything looks good. No more setup required! :heart:'
  end

  def full_path
    File.expand_path(File.join(File.dirname(__FILE__), '..'))
  end

  def full_bin_path
    File.join full_path, 'bin'
  end

  def env_exists?
    File.exist? File.join(full_path, '.env')
  end

  def separator
    '-' * 70
  end
end

puts Setup.new.analyze.content
